import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useState } from "react";

import { api } from "../utils/api";

const Home: NextPage = () => {
  //const hello = api.example.hello.useQuery({ text: "from tRPC" });

  let [todos, setTodos] = useState([{ id: 1, text: "todo 1", completed: false }, { id: 2, text: "todo 2", completed: false}]);

  const handleAddTodo = (e: any) => {
    e.preventDefault();
    const newTodo = {
      id: todos.length + 1,
      text: e.target.elements.todoInput.value,
      completed: false
    }
    setTodos([...todos, newTodo]);
    e.target.reset();
  }

  const handleDeleteTodo = (id: number) => {
    const newTodos = todos.filter((todo) => todo.id !== id);
    setTodos(newTodos);
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col bg-gradient-to-b from-[#2e026d] to-[#15162c] ">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 max-w-screen-md mx-auto">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            TODOS
          </h1>
          <form className="w-full flex flex-row gap-4" onSubmit={handleAddTodo} >
            <label htmlFor="todoInput" className="sr-only">Todo input</label>
            <input id="todoInput" type="text" placeholder="What do you need to get done?" className="w-full p-4 text-lg font-semibold text-white bg-[#3c1a7f] rounded-lg shadow-md" />
            <input className="bg-white text-[#3c1a7f] shadow-md rounded px-6 text-lg font-semibold cursor-pointer hover:bg-[#3c1a7f] hover:text-white" type="submit" value="Submit" />
          </form>
          <hr></hr>
          <div className="container flex flex-col">
            {todos.map((todo, i) => {
              return (
                <div 
                key={todo.id}
                className="flex items-center justify-between w-full p-4 mb-4 text-lg font-semibold text-white bg-[#3c1a7f] hover:bg-[#4A11B2] rounded-lg shadow-md cursor-pointer">
                    <div className="flex flex-row">
                      <input id={`todo ${todo.id}`} type="checkbox" className="appearance-none mt-1 mr-4 w-4 h-4 rounded-xl bg-[#3c1a7f] checked:bg-white ring-white ring-2 cursor-pointer "></input>
                      <label className="" htmlFor={`todo ${todo.id}`}>{todo.text}</label>
                    </div>
                    <span className="text-2xl font-bold hover:text-red-500" 
                      onClick={() => handleDeleteTodo(todo.id)}
                    >X</span>
                </div>
              );
            })
            }
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
